-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.accounts
(
    id serial NOT NULL,
    account_id text COLLATE pg_catalog."default" NOT NULL,
    compeny_name text COLLATE pg_catalog."default" NOT NULL,
    balance numeric,
    status text COLLATE pg_catalog."default",
    descraption text COLLATE pg_catalog."default",
    CONSTRAINT accounts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.business_categories
(
    business_id integer NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT business_categories_pkey PRIMARY KEY (business_id, category_id)
);

CREATE TABLE IF NOT EXISTS public.business_mappings
(
    id serial NOT NULL,
    original_business text COLLATE pg_catalog."default" NOT NULL,
    mapped_business_id integer,
    CONSTRAINT business_mappings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.businesses
(
    id serial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    status text COLLATE pg_catalog."default" DEFAULT 'pending'::text,
    CONSTRAINT businesses_pkey PRIMARY KEY (id),
    CONSTRAINT businesses_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    status text COLLATE pg_catalog."default" DEFAULT 'pending'::text,
    CONSTRAINT categories_pkey PRIMARY KEY (id),
    CONSTRAINT categories_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.category_mappings
(
    id serial NOT NULL,
    original_category text COLLATE pg_catalog."default" NOT NULL,
    mapped_category_id integer,
    CONSTRAINT category_mappings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.companies
(
    id integer NOT NULL DEFAULT nextval('company_info_id_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    encrypted_username bytea,
    encrypted_password bytea,
    CONSTRAINT company_info_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    id serial NOT NULL,
    message text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    type text COLLATE pg_catalog."default" NOT NULL,
    buttons text[] COLLATE pg_catalog."default",
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pending_trx
(
    id integer,
    identifier text COLLATE pg_catalog."default",
    "accountNumber" text COLLATE pg_catalog."default",
    type text COLLATE pg_catalog."default",
    status text COLLATE pg_catalog."default",
    date timestamp without time zone,
    "processedDate" timestamp without time zone,
    "originalAmount" numeric,
    "originalCurrency" text COLLATE pg_catalog."default",
    "chargedAmount" numeric,
    "chargedCurrency" text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    memo text COLLATE pg_catalog."default",
    "businessId" integer,
    "manualCategoryId" integer,
    "installmentNumber" integer,
    "installmentTotal" integer,
    category text COLLATE pg_catalog."default",
    CONSTRAINT unique_pending_txn UNIQUE (date, "accountNumber", "chargedAmount", description)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    id serial NOT NULL,
    identifier text COLLATE pg_catalog."default" NOT NULL,
    "accountNumber" text COLLATE pg_catalog."default" NOT NULL,
    type text COLLATE pg_catalog."default",
    status text COLLATE pg_catalog."default",
    date timestamp without time zone NOT NULL,
    "processedDate" timestamp without time zone NOT NULL,
    "originalAmount" numeric NOT NULL,
    "originalCurrency" text COLLATE pg_catalog."default",
    "chargedAmount" numeric NOT NULL,
    "chargedCurrency" text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default" NOT NULL,
    memo text COLLATE pg_catalog."default",
    "businessId" integer,
    "manualCategoryId" integer,
    "installmentNumber" integer,
    "installmentTotal" integer,
    category text COLLATE pg_catalog."default",
    CONSTRAINT transactions_pkey PRIMARY KEY (id),
    CONSTRAINT transactions_identifier_key UNIQUE (identifier)
);

CREATE TABLE IF NOT EXISTS public.user_changes
(
    id serial NOT NULL,
    change_type text COLLATE pg_catalog."default" NOT NULL,
    original_value text COLLATE pg_catalog."default" NOT NULL,
    new_value text COLLATE pg_catalog."default" NOT NULL,
    count integer DEFAULT 1,
    CONSTRAINT user_changes_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.business_categories
    ADD CONSTRAINT business_categories_business_id_fkey FOREIGN KEY (business_id)
    REFERENCES public.businesses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.business_categories
    ADD CONSTRAINT business_categories_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.business_mappings
    ADD CONSTRAINT business_mappings_mapped_business_id_fkey FOREIGN KEY (mapped_business_id)
    REFERENCES public.businesses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.category_mappings
    ADD CONSTRAINT category_mappings_mapped_category_id_fkey FOREIGN KEY (mapped_category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT transactions_business_id_fkey FOREIGN KEY ("businessId")
    REFERENCES public.businesses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT transactions_manual_category_id_fkey FOREIGN KEY ("manualCategoryId")
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

END;